{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9c258fe6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:33:54.378839Z",
     "iopub.status.busy": "2025-01-14T21:33:54.378538Z",
     "iopub.status.idle": "2025-01-14T21:35:00.069557Z",
     "shell.execute_reply": "2025-01-14T21:35:00.068351Z"
    },
    "papermill": {
     "duration": 65.700968,
     "end_time": "2025-01-14T21:35:00.071849",
     "exception": false,
     "start_time": "2025-01-14T21:33:54.370881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!pip install -q -U pyPDF2\n",
    "!pip install -q -U peft \n",
    "!pip install -q -U trl\n",
    "!pip install -q -U bitsandbytes\n",
    "#!pip install -q -U peftModel\n",
    "!pip install -q -U transformers\n",
    "!pip install -q -U rouge_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f5b553c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:00.086039Z",
     "iopub.status.busy": "2025-01-14T21:35:00.085719Z",
     "iopub.status.idle": "2025-01-14T21:35:21.447895Z",
     "shell.execute_reply": "2025-01-14T21:35:21.447241Z"
    },
    "papermill": {
     "duration": 21.370859,
     "end_time": "2025-01-14T21:35:21.449931",
     "exception": false,
     "start_time": "2025-01-14T21:35:00.079072",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from transformers import AutoTokenizer, AutoModelForCausalLM, Trainer, TrainingArguments, TextDataset, DataCollatorForLanguageModeling, BitsAndBytesConfig\n",
    "from sklearn.model_selection import train_test_split\n",
    "from accelerate import init_empty_weights\n",
    "from huggingface_hub import login\n",
    "import torch\n",
    "import os\n",
    "from PyPDF2 import PdfReader\n",
    "import locale\n",
    "import re\n",
    "from nltk.tokenize import word_tokenize\n",
    "import nltk\n",
    "from peft import LoraConfig, PeftModel, prepare_model_for_kbit_training, get_peft_model\n",
    "from datasets import Dataset, DatasetDict\n",
    "from datasets import load_dataset\n",
    "from trl import SFTTrainer, SFTConfig\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "85b02b32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.462638Z",
     "iopub.status.busy": "2025-01-14T21:35:21.462368Z",
     "iopub.status.idle": "2025-01-14T21:35:21.590273Z",
     "shell.execute_reply": "2025-01-14T21:35:21.589366Z"
    },
    "papermill": {
     "duration": 0.135999,
     "end_time": "2025-01-14T21:35:21.591858",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.455859",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Donwload necessary module NLTK\n",
    "nltk.download('punkt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "36d0daf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.604659Z",
     "iopub.status.busy": "2025-01-14T21:35:21.604388Z",
     "iopub.status.idle": "2025-01-14T21:35:21.607893Z",
     "shell.execute_reply": "2025-01-14T21:35:21.607277Z"
    },
    "papermill": {
     "duration": 0.011737,
     "end_time": "2025-01-14T21:35:21.609608",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.597871",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fixing unicode error in google colab\n",
    "locale.getpreferredencoding = lambda: \"UTF-8\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb741eed",
   "metadata": {
    "papermill": {
     "duration": 0.005155,
     "end_time": "2025-01-14T21:35:21.620404",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.615249",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 1. Load model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7431bc2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.632316Z",
     "iopub.status.busy": "2025-01-14T21:35:21.632054Z",
     "iopub.status.idle": "2025-01-14T21:35:21.635435Z",
     "shell.execute_reply": "2025-01-14T21:35:21.634763Z"
    },
    "papermill": {
     "duration": 0.011138,
     "end_time": "2025-01-14T21:35:21.636939",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.625801",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Load the Gemma model for other tasks\n",
    "gemma_model_path = \"/kaggle/input/gemma-2/transformers/gemma-2-9b-it/2\"  # Update with the exact folder name if different"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "76f03db2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.648821Z",
     "iopub.status.busy": "2025-01-14T21:35:21.648568Z",
     "iopub.status.idle": "2025-01-14T21:35:21.652822Z",
     "shell.execute_reply": "2025-01-14T21:35:21.652077Z"
    },
    "papermill": {
     "duration": 0.011909,
     "end_time": "2025-01-14T21:35:21.654392",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.642483",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def load_quantized_model(model_name: str):\n",
    "    bnb_config = BitsAndBytesConfig(\n",
    "        load_in_4bit=True,                   #This tells the system to load the model using 4-bit precision, which drastically reduces memory usage.\n",
    "        bnb_4bit_use_double_quant=True,      #Enables double quantization, a technique used to further compress the model while retaining accuracy.\n",
    "        bnb_4bit_quant_type=\"nf4\",           #his specifies the type of quantization as NF4, which is a particular type of 4-bit quantization technique used in machine learning.\n",
    "        bnb_4bit_compute_dtype=torch.bfloat16   #This sets the computation to use the bfloat16 (16-bit floating point) data type, which is less precise than 32-bit but much faster and consumes less memory, making it efficient for large models.\n",
    "    )\n",
    "\n",
    "    model = AutoModelForCausalLM.from_pretrained(\n",
    "        model_name,\n",
    "        torch_dtype=torch.bfloat16,\n",
    "        quantization_config=bnb_config\n",
    "    )\n",
    "    return model    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3163a027",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.666255Z",
     "iopub.status.busy": "2025-01-14T21:35:21.665979Z",
     "iopub.status.idle": "2025-01-14T21:35:21.669672Z",
     "shell.execute_reply": "2025-01-14T21:35:21.669051Z"
    },
    "papermill": {
     "duration": 0.011474,
     "end_time": "2025-01-14T21:35:21.671264",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.659790",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def initialize_tokenizer(model_name: str):\n",
    "    tokenizer = AutoTokenizer.from_pretrained(model_name)\n",
    "    tokenizer.bos_token_id = tokenizer.convert_tokens_to_ids('<s>')  # Exemples de configuration\n",
    "    return tokenizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f2d82120",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:35:21.683128Z",
     "iopub.status.busy": "2025-01-14T21:35:21.682852Z",
     "iopub.status.idle": "2025-01-14T21:37:41.656162Z",
     "shell.execute_reply": "2025-01-14T21:37:41.655430Z"
    },
    "papermill": {
     "duration": 139.981567,
     "end_time": "2025-01-14T21:37:41.658158",
     "exception": false,
     "start_time": "2025-01-14T21:35:21.676591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`low_cpu_mem_usage` was None, now default to True since model is quantized.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5356f5aaf6554a469d67cd290b096b57",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = load_quantized_model(gemma_model_path)\n",
    "tokenizer = initialize_tokenizer(gemma_model_path)\n",
    "# Spécifier les IDs des tokens d'arrêt\n",
    "stop_token_ids = [tokenizer.eos_token_id]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4873141",
   "metadata": {
    "papermill": {
     "duration": 0.005535,
     "end_time": "2025-01-14T21:37:41.669708",
     "exception": false,
     "start_time": "2025-01-14T21:37:41.664173",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 2. Load Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "556c5352",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:37:41.683435Z",
     "iopub.status.busy": "2025-01-14T21:37:41.683138Z",
     "iopub.status.idle": "2025-01-14T21:40:31.538104Z",
     "shell.execute_reply": "2025-01-14T21:40:31.537295Z"
    },
    "papermill": {
     "duration": 169.870404,
     "end_time": "2025-01-14T21:40:31.545908",
     "exception": false,
     "start_time": "2025-01-14T21:37:41.675504",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset({\n",
      "    features: ['filename', 'content', 'page'],\n",
      "    num_rows: 37\n",
      "})\n"
     ]
    }
   ],
   "source": [
    "from PyPDF2 import PdfReader\n",
    "import os\n",
    "\n",
    "pdf_dir = \"/kaggle/input/africa-beautiful-story/story\"\n",
    "data = []\n",
    "\n",
    "for filename in os.listdir(pdf_dir):\n",
    "    if filename.endswith(\".pdf\"):\n",
    "        file_path = os.path.join(pdf_dir, filename)\n",
    "        try:\n",
    "            reader = PdfReader(file_path)\n",
    "            content = \"\"\n",
    "            for page in reader.pages:\n",
    "                content += page.extract_text()\n",
    "            num_pages = len(reader.pages)\n",
    "            data.append({\"filename\": filename, \"content\": content, \"page\": num_pages})\n",
    "            pass\n",
    "            #print(f\"Extracted from {filename}: {content[:50]}...\")\n",
    "        except Exception as e:  # General exception handling\n",
    "            pass\n",
    "            #print(f\"Skipping {filename} due to error: {e}\")\n",
    "\n",
    "dataset = Dataset.from_list(data)\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9340f9dc",
   "metadata": {
    "papermill": {
     "duration": 0.005494,
     "end_time": "2025-01-14T21:40:31.557311",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.551817",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 3. Fine-tuning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29ce2321",
   "metadata": {
    "papermill": {
     "duration": 0.005364,
     "end_time": "2025-01-14T21:40:31.568260",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.562896",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.1 LoRA Config\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "741ca19e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:31.580796Z",
     "iopub.status.busy": "2025-01-14T21:40:31.580506Z",
     "iopub.status.idle": "2025-01-14T21:40:31.606209Z",
     "shell.execute_reply": "2025-01-14T21:40:31.605585Z"
    },
    "papermill": {
     "duration": 0.033853,
     "end_time": "2025-01-14T21:40:31.607854",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.574001",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.gradient_checkpointing_enable()\n",
    "model = prepare_model_for_kbit_training(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c5e9146d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:31.620299Z",
     "iopub.status.busy": "2025-01-14T21:40:31.619989Z",
     "iopub.status.idle": "2025-01-14T21:40:31.624844Z",
     "shell.execute_reply": "2025-01-14T21:40:31.624194Z"
    },
    "papermill": {
     "duration": 0.012782,
     "end_time": "2025-01-14T21:40:31.626376",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.613594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import bitsandbytes as bnb\n",
    "def find_all_linear_name(model):\n",
    "    cls = bnb.nn.Linear4bit\n",
    "    lora_module_names = set()\n",
    "    for name, module in model.named_modules():\n",
    "        if isinstance(module, cls):\n",
    "            names = name.split('.')\n",
    "            lora_module_names.add(names[0] if len(names) == 1 else names[-1])\n",
    "        if 'lm_head' in lora_module_names: \n",
    "            lora_module_names.remove('lm_head')\n",
    "    return list(lora_module_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "600702be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:31.638399Z",
     "iopub.status.busy": "2025-01-14T21:40:31.638140Z",
     "iopub.status.idle": "2025-01-14T21:40:31.643135Z",
     "shell.execute_reply": "2025-01-14T21:40:31.642385Z"
    },
    "papermill": {
     "duration": 0.012904,
     "end_time": "2025-01-14T21:40:31.644851",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.631947",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['o_proj', 'q_proj', 'down_proj', 'k_proj', 'up_proj', 'v_proj', 'gate_proj']\n"
     ]
    }
   ],
   "source": [
    "module = find_all_linear_name(model)\n",
    "print(module)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c21d5302",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:31.657006Z",
     "iopub.status.busy": "2025-01-14T21:40:31.656786Z",
     "iopub.status.idle": "2025-01-14T21:40:34.414680Z",
     "shell.execute_reply": "2025-01-14T21:40:34.413724Z"
    },
    "papermill": {
     "duration": 2.766526,
     "end_time": "2025-01-14T21:40:34.417004",
     "exception": false,
     "start_time": "2025-01-14T21:40:31.650478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lora_config = LoraConfig(\n",
    "    r = 64,\n",
    "    lora_alpha=32,\n",
    "    target_modules=module,\n",
    "    lora_dropout=0.05,\n",
    "    bias=\"none\",\n",
    "    task_type=\"CAUSAL_LM\"\n",
    ")\n",
    "model = get_peft_model(model, lora_config)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6df798fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:34.435006Z",
     "iopub.status.busy": "2025-01-14T21:40:34.434713Z",
     "iopub.status.idle": "2025-01-14T21:40:34.449856Z",
     "shell.execute_reply": "2025-01-14T21:40:34.449012Z"
    },
    "papermill": {
     "duration": 0.025854,
     "end_time": "2025-01-14T21:40:34.451488",
     "exception": false,
     "start_time": "2025-01-14T21:40:34.425634",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "trainable : 216072192 | Total : 9457778176 | Percentage : 2.2846%\n"
     ]
    }
   ],
   "source": [
    "trainable, total = model.get_nb_trainable_parameters()\n",
    "print(f\"trainable : {trainable} | Total : {total} | Percentage : {trainable/total*100:.4f}%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdef85a9",
   "metadata": {
    "papermill": {
     "duration": 0.00546,
     "end_time": "2025-01-14T21:40:34.462825",
     "exception": false,
     "start_time": "2025-01-14T21:40:34.457365",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.2 Run training fine-tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b577c38f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:34.475967Z",
     "iopub.status.busy": "2025-01-14T21:40:34.475330Z",
     "iopub.status.idle": "2025-01-14T21:40:38.365358Z",
     "shell.execute_reply": "2025-01-14T21:40:38.364413Z"
    },
    "papermill": {
     "duration": 3.898342,
     "end_time": "2025-01-14T21:40:38.366955",
     "exception": false,
     "start_time": "2025-01-14T21:40:34.468613",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2daa6ba74122416bbafd735087bef2ba",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/37 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.\n"
     ]
    }
   ],
   "source": [
    "# Tokenize the dataset\n",
    "def tokenize_function(examples):\n",
    "    return tokenizer(examples[\"content\"], truncation=True)\n",
    "\n",
    "tokenized_dataset = dataset.map(tokenize_function, batched=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "229e9486",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:38.380571Z",
     "iopub.status.busy": "2025-01-14T21:40:38.380280Z",
     "iopub.status.idle": "2025-01-14T21:40:38.451869Z",
     "shell.execute_reply": "2025-01-14T21:40:38.450914Z"
    },
    "papermill": {
     "duration": 0.080451,
     "end_time": "2025-01-14T21:40:38.453928",
     "exception": false,
     "start_time": "2025-01-14T21:40:38.373477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Split the dataset into train and test sets\n",
    "train_dataset, test_dataset = train_test_split(dataset, test_size=0.2, random_state=42)\n",
    "\n",
    "# Convert the datasets to Hugging Face Datasets\n",
    "train_dataset = Dataset.from_dict(train_dataset)\n",
    "test_dataset = Dataset.from_dict(test_dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2f3f4cb1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:38.467458Z",
     "iopub.status.busy": "2025-01-14T21:40:38.467204Z",
     "iopub.status.idle": "2025-01-14T21:40:38.578624Z",
     "shell.execute_reply": "2025-01-14T21:40:38.577789Z"
    },
    "papermill": {
     "duration": 0.12029,
     "end_time": "2025-01-14T21:40:38.580563",
     "exception": false,
     "start_time": "2025-01-14T21:40:38.460273",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "53f33b5f34604c3b8510e48bcd1a55f3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/29 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "47a30d36760f478ab59ec086678cfac8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/8 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def preprocess_function(examples):\n",
    "    return {\"text\": examples[\"content\"]}  # Assuming 'content' is your text column\n",
    "\n",
    "train_dataset = train_dataset.map(preprocess_function, batched=True)\n",
    "test_dataset = test_dataset.map(preprocess_function, batched=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8766a2b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:38.594936Z",
     "iopub.status.busy": "2025-01-14T21:40:38.594689Z",
     "iopub.status.idle": "2025-01-14T21:40:43.932357Z",
     "shell.execute_reply": "2025-01-14T21:40:43.931397Z"
    },
    "papermill": {
     "duration": 5.346794,
     "end_time": "2025-01-14T21:40:43.934373",
     "exception": false,
     "start_time": "2025-01-14T21:40:38.587579",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "74ef213ff13b48a68aa299d71a3d1458",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/29 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ec14ef47751e4ab4afb4c10c556ada97",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/8 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "trainer = SFTTrainer(\n",
    "    model = model,\n",
    "    train_dataset = train_dataset,\n",
    "    eval_dataset = test_dataset,\n",
    "    peft_config=lora_config,\n",
    "    args = TrainingArguments(\n",
    "        per_device_train_batch_size=1,\n",
    "        gradient_accumulation_steps=4,\n",
    "        warmup_steps=0,\n",
    "        max_steps=10,\n",
    "        learning_rate=2e-4,\n",
    "        logging_steps=1,\n",
    "        output_dir=\"output\",\n",
    "        optim=\"paged_adamw_8bit\",\n",
    "        save_strategy=\"epoch\",\n",
    "    ),\n",
    "data_collator=DataCollatorForLanguageModeling(tokenizer, mlm=False),\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "9ccf832b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:40:43.948630Z",
     "iopub.status.busy": "2025-01-14T21:40:43.948370Z",
     "iopub.status.idle": "2025-01-14T21:41:11.971376Z",
     "shell.execute_reply": "2025-01-14T21:41:11.970754Z"
    },
    "papermill": {
     "duration": 28.031754,
     "end_time": "2025-01-14T21:41:11.973027",
     "exception": false,
     "start_time": "2025-01-14T21:40:43.941273",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mwandb\u001b[0m: Using wandb-core as the SDK backend. Please refer to https://wandb.me/wandb-core for more information.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: W&B API key is configured. Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m If you're specifying your api key in code, ensure this code is not shared publicly.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m Consider setting the WANDB_API_KEY environment variable, or running `wandb login` from the command line.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mipoukmarievictoire1\u001b[0m (\u001b[33mipoukmarievictoire1-national-advanced-school-of-engineering\u001b[0m). Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214044-85jm1zpp\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mcomic-puddle-228\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/85jm1zpp\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 99\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mcomic-puddle-228\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/85jm1zpp\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214044-85jm1zpp/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214049-9eig9icw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msolar-puddle-229\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/9eig9icw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▂▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 100\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msolar-puddle-229\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/9eig9icw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214049-9eig9icw/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214051-2n2nrolx\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mlively-silence-230\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/2n2nrolx\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇████\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 101\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mlively-silence-230\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/2n2nrolx\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214051-2n2nrolx/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214054-t1hllhwt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msolar-plant-231\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/t1hllhwt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▁▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▆▇▇▇▇█\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 102\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msolar-plant-231\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/t1hllhwt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214054-t1hllhwt/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214056-x456gksu\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mpious-terrain-232\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/x456gksu\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 103\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mpious-terrain-232\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/x456gksu\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214056-x456gksu/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214059-mwokp8po\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msolar-feather-233\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/mwokp8po\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇███\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 104\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msolar-feather-233\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/mwokp8po\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214059-mwokp8po/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214101-gjudzglz\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mavid-grass-234\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/gjudzglz\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇█████\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 105\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mavid-grass-234\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/gjudzglz\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214101-gjudzglz/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214104-q7jztbcy\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mexpert-yogurt-235\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/q7jztbcy\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇▇█████\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 106\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mexpert-yogurt-235\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/q7jztbcy\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214104-q7jztbcy/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214106-ll7td19c\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mgenial-smoke-236\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ll7td19c\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇████\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 107\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mgenial-smoke-236\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ll7td19c\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214106-ll7td19c/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214109-2bboq80n\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msilvery-leaf-237\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/2bboq80n\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric ▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: metric 108\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msilvery-leaf-237\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/2bboq80n\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214109-2bboq80n/logs\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "import wandb\n",
    "from kaggle_secrets import UserSecretsClient\n",
    "\n",
    "# Retrieve the wandb API key from Kaggle secrets\n",
    "user_secrets = UserSecretsClient()\n",
    "secret_value_1 = user_secrets.get_secret(\"trainer_train_token\")\n",
    "\n",
    "# Log into wandb using the API key\n",
    "wandb.login(key=secret_value_1)\n",
    "\n",
    "# Run multiple experiments in a loop\n",
    "for x in range(10):\n",
    "    # Initialize a new wandb run with reinitialization enabled and appropriate settings\n",
    "    run = wandb.init(\n",
    "        reinit=True,  # Allows reinitialization of the run\n",
    "        project=\"huggingface\",\n",
    "        entity=\"ipoukmarievictoire1-national-advanced-school-of-engineering\",\n",
    "        config={\n",
    "            \"learning_rate\": 0.02,\n",
    "            \"architecture\": \"CNN\",\n",
    "            \"dataset\": \"CIFAR-100\",\n",
    "            \"epochs\": 10,\n",
    "        },\n",
    "        settings=wandb.Settings(start_method=\"fork\")  # Use \"fork\" to avoid multiprocessing issues\n",
    "    )\n",
    "    \n",
    "    # Log some metrics in the current run\n",
    "    for y in range(100):\n",
    "        wandb.log({\"metric\": x + y})\n",
    "    \n",
    "    # Finish the current run to avoid conflicts\n",
    "    run.finish()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "769ce063",
   "metadata": {
    "papermill": {
     "duration": 0.011024,
     "end_time": "2025-01-14T21:41:11.996137",
     "exception": false,
     "start_time": "2025-01-14T21:41:11.985113",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.3 Quantization post trainer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "47772b24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:41:12.019721Z",
     "iopub.status.busy": "2025-01-14T21:41:12.019435Z",
     "iopub.status.idle": "2025-01-14T21:41:12.026119Z",
     "shell.execute_reply": "2025-01-14T21:41:12.025280Z"
    },
    "papermill": {
     "duration": 0.02053,
     "end_time": "2025-01-14T21:41:12.027877",
     "exception": false,
     "start_time": "2025-01-14T21:41:12.007347",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'|===========================================================================|\\n|                  PyTorch CUDA memory summary, device ID 0                 |\\n|---------------------------------------------------------------------------|\\n|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |\\n|===========================================================================|\\n|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |\\n|---------------------------------------------------------------------------|\\n| Allocated memory      |   8421 MiB |   9346 MiB |  26558 MiB |  18136 MiB |\\n|       from large pool |   7910 MiB |   9219 MiB |  25932 MiB |  18022 MiB |\\n|       from small pool |    511 MiB |    511 MiB |    625 MiB |    113 MiB |\\n|---------------------------------------------------------------------------|\\n| Active memory         |   8421 MiB |   9346 MiB |  26558 MiB |  18136 MiB |\\n|       from large pool |   7910 MiB |   9219 MiB |  25932 MiB |  18022 MiB |\\n|       from small pool |    511 MiB |    511 MiB |    625 MiB |    113 MiB |\\n|---------------------------------------------------------------------------|\\n| Requested memory      |   8421 MiB |   9346 MiB |  26546 MiB |  18125 MiB |\\n|       from large pool |   7910 MiB |   9219 MiB |  25921 MiB |  18011 MiB |\\n|       from small pool |    511 MiB |    511 MiB |    624 MiB |    113 MiB |\\n|---------------------------------------------------------------------------|\\n| GPU reserved memory   |   9996 MiB |   9996 MiB |  14458 MiB |   4462 MiB |\\n|       from large pool |   9446 MiB |   9446 MiB |  13874 MiB |   4428 MiB |\\n|       from small pool |    550 MiB |    550 MiB |    584 MiB |     34 MiB |\\n|---------------------------------------------------------------------------|\\n| Non-releasable memory |   1574 MiB |   1953 MiB |   5235 MiB |   3661 MiB |\\n|       from large pool |   1536 MiB |   1949 MiB |   4770 MiB |   3234 MiB |\\n|       from small pool |     38 MiB |     39 MiB |    464 MiB |    426 MiB |\\n|---------------------------------------------------------------------------|\\n| Allocations           |    2230    |    2230    |    5760    |    3530    |\\n|       from large pool |     421    |     421    |     842    |     421    |\\n|       from small pool |    1809    |    1809    |    4918    |    3109    |\\n|---------------------------------------------------------------------------|\\n| Active allocs         |    2230    |    2230    |    5760    |    3530    |\\n|       from large pool |     421    |     421    |     842    |     421    |\\n|       from small pool |    1809    |    1809    |    4918    |    3109    |\\n|---------------------------------------------------------------------------|\\n| GPU reserved segments |     440    |     440    |     511    |      71    |\\n|       from large pool |     165    |     165    |     219    |      54    |\\n|       from small pool |     275    |     275    |     292    |      17    |\\n|---------------------------------------------------------------------------|\\n| Non-releasable allocs |     384    |     384    |    1212    |     828    |\\n|       from large pool |     122    |     123    |     230    |     108    |\\n|       from small pool |     262    |     262    |     982    |     720    |\\n|---------------------------------------------------------------------------|\\n| Oversize allocations  |       0    |       0    |       0    |       0    |\\n|---------------------------------------------------------------------------|\\n| Oversize GPU segments |       0    |       0    |       0    |       0    |\\n|===========================================================================|\\n'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "torch.backends.cuda.enable_mem_efficient_sdp(False)\n",
    "torch.backends.cuda.enable_flash_sdp(False)\n",
    "torch.cuda.empty_cache()\n",
    "torch.cuda.memory_summary(device=None, abbreviated=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0acdd01e",
   "metadata": {
    "papermill": {
     "duration": 0.011124,
     "end_time": "2025-01-14T21:41:12.050563",
     "exception": false,
     "start_time": "2025-01-14T21:41:12.039439",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.4 Evaluate model : metric ROUGE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ff43c3aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:41:12.074086Z",
     "iopub.status.busy": "2025-01-14T21:41:12.073814Z",
     "iopub.status.idle": "2025-01-14T21:41:12.080083Z",
     "shell.execute_reply": "2025-01-14T21:41:12.079280Z"
    },
    "papermill": {
     "duration": 0.01966,
     "end_time": "2025-01-14T21:41:12.081659",
     "exception": false,
     "start_time": "2025-01-14T21:41:12.061999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from torch.utils.data import DataLoader\n",
    "from rouge_score import rouge_scorer\n",
    "from transformers import GenerationConfig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5df8a284",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T21:41:12.105829Z",
     "iopub.status.busy": "2025-01-14T21:41:12.105586Z",
     "iopub.status.idle": "2025-01-14T22:54:25.557434Z",
     "shell.execute_reply": "2025-01-14T22:54:25.556720Z"
    },
    "papermill": {
     "duration": 4393.466091,
     "end_time": "2025-01-14T22:54:25.559211",
     "exception": false,
     "start_time": "2025-01-14T21:41:12.093120",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214112-ylt1ksgl\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mcosmic-moon-238\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ylt1ksgl\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mcosmic-moon-238\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ylt1ksgl\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214112-ylt1ksgl/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_214830-j1flumuv\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mgiddy-paper-239\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/j1flumuv\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mgiddy-paper-239\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/j1flumuv\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_214830-j1flumuv/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_215548-lpejndpb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mglorious-river-240\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/lpejndpb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mglorious-river-240\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/lpejndpb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_215548-lpejndpb/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_220307-qrrqbir6\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mworthy-plant-241\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/qrrqbir6\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mworthy-plant-241\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/qrrqbir6\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_220307-qrrqbir6/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_221025-lguxtgm7\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mworldly-microwave-242\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/lguxtgm7\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mworldly-microwave-242\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/lguxtgm7\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_221025-lguxtgm7/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_221743-z9y4kpza\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mflowing-bush-243\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/z9y4kpza\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mflowing-bush-243\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/z9y4kpza\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_221743-z9y4kpza/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_222509-o8sffimc\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mlaced-dragon-244\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/o8sffimc\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mlaced-dragon-244\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/o8sffimc\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_222509-o8sffimc/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_223231-0jhfpinw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msunny-river-245\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/0jhfpinw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msunny-river-245\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/0jhfpinw\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_223231-0jhfpinw/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_223953-anpl9ykt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mdistinctive-sound-246\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/anpl9ykt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33mdistinctive-sound-246\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/anpl9ykt\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_223953-anpl9ykt/logs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.18.3\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250114_224709-ooiliqeb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msandy-durian-247\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ooiliqeb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall ▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge1_fmeasure 0.16224\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge1_precision 0.9978\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge1_recall 0.14414\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rouge2_fmeasure 0.16165\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rouge2_precision 0.98496\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rouge2_recall 0.14384\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:  rougeL_fmeasure 0.16217\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: rougeL_precision 0.99622\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:    rougeL_recall 0.1441\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33msandy-durian-247\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface/runs/ooiliqeb\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/ipoukmarievictoire1-national-advanced-school-of-engineering/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250114_224709-ooiliqeb/logs\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "from transformers import GenerationConfig\n",
    "\n",
    "def evaluate_model(model, eval_dataset, tokenizer):\n",
    "    \"\"\"Evaluates the model on a given dataset using ROUGE.\"\"\"\n",
    "    model.eval()  # Set the model to evaluation mode\n",
    "\n",
    "    scorer = rouge_scorer.RougeScorer(['rouge1', 'rouge2', 'rougeL'], use_stemmer=True)\n",
    "\n",
    "    all_predictions = []\n",
    "    all_references = []\n",
    "\n",
    "    for batch in DataLoader(eval_dataset, batch_size=1):\n",
    "        inputs = tokenizer(batch[\"content\"], return_tensors=\"pt\", truncation=True, max_length=2048).to(\"cuda\")\n",
    "        with torch.cuda.amp.autocast():\n",
    "            outputs = model.generate(\n",
    "                **inputs,\n",
    "                generation_config=GenerationConfig(max_new_tokens=100)\n",
    "            )\n",
    "        \n",
    "        # Decode the generated text\n",
    "        generated_text = tokenizer.batch_decode(outputs, skip_special_tokens=True)\n",
    "        \n",
    "        # Append predictions and references\n",
    "        all_predictions.extend(generated_text)\n",
    "        all_references.extend(batch[\"content\"])\n",
    "\n",
    "    # Calculate ROUGE scores for each pair of prediction and reference\n",
    "    scores = {\"rouge1\": [], \"rouge2\": [], \"rougeL\": []}\n",
    "    for pred, ref in zip(all_predictions, all_references):\n",
    "        score = scorer.score(ref, pred)\n",
    "        for key in scores:\n",
    "            scores[key].append(score[key])\n",
    "\n",
    "    # Aggregate the scores (average precision, recall, and f-measure)\n",
    "    aggregated_scores = {\n",
    "        key: {\n",
    "            \"precision\": sum(s.precision for s in scores[key]) / len(scores[key]),\n",
    "            \"recall\": sum(s.recall for s in scores[key]) / len(scores[key]),\n",
    "            \"fmeasure\": sum(s.fmeasure for s in scores[key]) / len(scores[key]),\n",
    "        }\n",
    "        for key in scores\n",
    "    }\n",
    "\n",
    "    # Log ROUGE scores to wandb\n",
    "    wandb.log({\n",
    "        \"rouge1_precision\": aggregated_scores['rouge1'][\"precision\"],\n",
    "        \"rouge1_recall\": aggregated_scores['rouge1'][\"recall\"],\n",
    "        \"rouge1_fmeasure\": aggregated_scores['rouge1'][\"fmeasure\"],\n",
    "        \"rouge2_precision\": aggregated_scores['rouge2'][\"precision\"],\n",
    "        \"rouge2_recall\": aggregated_scores['rouge2'][\"recall\"],\n",
    "        \"rouge2_fmeasure\": aggregated_scores['rouge2'][\"fmeasure\"],\n",
    "        \"rougeL_precision\": aggregated_scores['rougeL'][\"precision\"],\n",
    "        \"rougeL_recall\": aggregated_scores['rougeL'][\"recall\"],\n",
    "        \"rougeL_fmeasure\": aggregated_scores['rougeL'][\"fmeasure\"],\n",
    "    })\n",
    "    \n",
    "\n",
    "# Run multiple experiments in a loop\n",
    "for x in range(10):\n",
    "    # Initialize a new wandb run with reinitialization enabled and appropriate settings\n",
    "    run = wandb.init(\n",
    "        reinit=True,\n",
    "        project=\"huggingface\",\n",
    "        entity=\"ipoukmarievictoire1-national-advanced-school-of-engineering\",\n",
    "        config={\n",
    "            \"learning_rate\": 0.02,\n",
    "            \"architecture\": \"CNN\",\n",
    "            \"dataset\": \"CIFAR-100\",\n",
    "            \"epochs\": 10,\n",
    "        },\n",
    "        settings=wandb.Settings(start_method=\"fork\")\n",
    "    )\n",
    "\n",
    "    # ... (Your training code here)\n",
    "\n",
    "    # Evaluate the model after training\n",
    "    evaluate_model(model, test_dataset, tokenizer)\n",
    "\n",
    "    # Finish the current run\n",
    "    run.finish()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fef9bca5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T22:54:25.593400Z",
     "iopub.status.busy": "2025-01-14T22:54:25.593109Z",
     "iopub.status.idle": "2025-01-14T22:54:25.598168Z",
     "shell.execute_reply": "2025-01-14T22:54:25.597401Z"
    },
    "papermill": {
     "duration": 0.023996,
     "end_time": "2025-01-14T22:54:25.599785",
     "exception": false,
     "start_time": "2025-01-14T22:54:25.575789",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'# Model evalution\\neval_results = trainer.evaluate()\\nprint(f\"Résultats de l\\'évaluation : {eval_results}\")'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"# Model evalution\n",
    "eval_results = trainer.evaluate()\n",
    "print(f\"Résultats de l'évaluation : {eval_results}\")\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab35d6ba",
   "metadata": {
    "papermill": {
     "duration": 0.015866,
     "end_time": "2025-01-14T22:54:25.631918",
     "exception": false,
     "start_time": "2025-01-14T22:54:25.616052",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "72d25f26",
   "metadata": {
    "papermill": {
     "duration": 0.015861,
     "end_time": "2025-01-14T22:54:25.663962",
     "exception": false,
     "start_time": "2025-01-14T22:54:25.648101",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 4. Inference and test generation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a0574bc1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T22:54:25.697578Z",
     "iopub.status.busy": "2025-01-14T22:54:25.697273Z",
     "iopub.status.idle": "2025-01-14T22:54:25.704380Z",
     "shell.execute_reply": "2025-01-14T22:54:25.703584Z"
    },
    "papermill": {
     "duration": 0.025467,
     "end_time": "2025-01-14T22:54:25.706020",
     "exception": false,
     "start_time": "2025-01-14T22:54:25.680553",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def generate_text(prompt, model, tokenizer, max_length=200, num_return_sequences=1, temperature=0.7, top_k=50, top_p=0.95):\n",
    "    # Tokenize the input and move to the same device as the model\n",
    "    inputs = tokenizer(prompt, return_tensors=\"pt\").input_ids.to(model.device)\n",
    "    \n",
    "    # Cast the input tensor to LongTensor to match the expected input type\n",
    "    inputs = inputs.long()\n",
    "    \n",
    "    # Prepare generation configuration\n",
    "    generation_config = GenerationConfig(\n",
    "        max_length=max_length,\n",
    "        num_return_sequences=num_return_sequences,\n",
    "        temperature=temperature,\n",
    "        top_k=top_k,\n",
    "        top_p=top_p,\n",
    "        pad_token_id=tokenizer.eos_token_id,\n",
    "        eos_token_id=tokenizer.eos_token_id,\n",
    "    )\n",
    "    \n",
    "    # Generate text with the model\n",
    "    generated_outputs = model.generate(\n",
    "        inputs,\n",
    "        generation_config=generation_config,\n",
    "        use_cache=True,\n",
    "    )\n",
    "    \n",
    "    # Decode generated outputs\n",
    "    generated_texts = [tokenizer.decode(output, skip_special_tokens=True) for output in generated_outputs]\n",
    "    return generated_texts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f407669b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T22:54:25.739630Z",
     "iopub.status.busy": "2025-01-14T22:54:25.739344Z",
     "iopub.status.idle": "2025-01-14T22:55:01.035827Z",
     "shell.execute_reply": "2025-01-14T22:55:01.034846Z"
    },
    "papermill": {
     "duration": 35.331958,
     "end_time": "2025-01-14T22:55:01.054117",
     "exception": false,
     "start_time": "2025-01-14T22:54:25.722159",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The attention mask is not set and cannot be inferred from input because pad token is same as eos token. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Generated Text 1:\n",
      "histoire pour enfants\n",
      "\n",
      "**Le petit escargot et la grande aventure**\n",
      "\n",
      "Escargot était un petit escargot très curieux. Il adorait explorer son jardin, ramper sur les feuilles de salade et se cacher sous les rochers. Un jour, Escargot découvrit une petite boîte en bois, oubliée sous un buisson de roses. Intrigué, il la souleva avec sa coquille et la trouva remplie de graines colorées.\n",
      "\n",
      "\"Quelle merveille !\" s'exclama Escargot. \"Je n'ai jamais vu de graines aussi belles !\"\n",
      "\n",
      "Une petite voix sifflante répondit : \"Ces graines sont magiques, petit escargot. Elles peuvent faire pousser des fleurs extraordinaires.\"\n",
      "\n",
      "Escargot se retourna et vit une petite libellule perchée sur la boîte. \"Vraiment ?\" demanda-t-il, les yeux brillants.\n",
      "\n",
      "\"Oui, vraiment,\" répondit la libellule. \"Mais attention,\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Example usage of the generate_text function\n",
    "prompt = \"histoire pour enfants\"\n",
    "generated_texts = generate_text(\n",
    "    prompt=prompt,\n",
    "    model=model,\n",
    "    tokenizer=tokenizer,\n",
    "    max_length=200,  # Maximum length of the generated sequence\n",
    "    num_return_sequences=1,  # Number of sequences to generate\n",
    "    temperature=0.7,  # Controls the randomness\n",
    "    top_k=50,  # Limits the next-word choices to the top-k highest probability words\n",
    "    top_p=0.95  # Nucleus sampling probability threshold\n",
    ")\n",
    "\n",
    "# Print the generated text\n",
    "for i, text in enumerate(generated_texts):\n",
    "    print(f\"Generated Text {i + 1}:\\n{text}\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed685d03",
   "metadata": {
    "papermill": {
     "duration": 0.016194,
     "end_time": "2025-01-14T22:55:01.087443",
     "exception": false,
     "start_time": "2025-01-14T22:55:01.071249",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 5. Save Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "73fad7a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T22:55:01.121717Z",
     "iopub.status.busy": "2025-01-14T22:55:01.121376Z",
     "iopub.status.idle": "2025-01-14T22:55:01.125343Z",
     "shell.execute_reply": "2025-01-14T22:55:01.124625Z"
    },
    "papermill": {
     "duration": 0.023132,
     "end_time": "2025-01-14T22:55:01.126849",
     "exception": false,
     "start_time": "2025-01-14T22:55:01.103717",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "new_model = \"google/gemma-2-Generated-africa-story\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "cd7c3cc5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-14T22:55:01.160273Z",
     "iopub.status.busy": "2025-01-14T22:55:01.159976Z",
     "iopub.status.idle": "2025-01-14T22:55:02.346614Z",
     "shell.execute_reply": "2025-01-14T22:55:02.345580Z"
    },
    "papermill": {
     "duration": 1.206026,
     "end_time": "2025-01-14T22:55:02.349177",
     "exception": false,
     "start_time": "2025-01-14T22:55:01.143151",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "trainer.model.save_pretrained(\"/kaggle/working/Gemma_Story\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cdf3c190",
   "metadata": {
    "papermill": {
     "duration": 0.056551,
     "end_time": "2025-01-14T22:55:02.449561",
     "exception": false,
     "start_time": "2025-01-14T22:55:02.393010",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 9690815,
     "sourceId": 85416,
     "sourceType": "competition"
    },
    {
     "datasetId": 6482084,
     "sourceId": 10469041,
     "sourceType": "datasetVersion"
    },
    {
     "modelId": 76277,
     "modelInstanceId": 72256,
     "sourceId": 104453,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4874.443992,
   "end_time": "2025-01-14T22:55:06.376695",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-14T21:33:51.932703",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "07b05c79cde84424a22e74d61bbf09ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_81e344e260084b46a330aea11eb50b30",
       "placeholder": "​",
       "style": "IPY_MODEL_ba342adb28064f949d63644b453e08d8",
       "value": "Map: 100%"
      }
     },
     "0c6e4653cb23404b82a1b64789fa8d9a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "11c644b55667408da3398b447185fd3f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "130391c89297411d93f1e5f35cccd5c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_78ba0412ce0c4f309a250b24f59c8cad",
       "placeholder": "​",
       "style": "IPY_MODEL_b6452f575ccf491d918c6143b475f460",
       "value": "Map: 100%"
      }
     },
     "14035f72adfc4d1087fa81399bd64818": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "18133cf89cd748b7b1eb62448ac19d61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_25ed25b483df40c0a994f754d32a8c72",
       "max": 8.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_49ae8da49c564edf882ee3372b684df2",
       "value": 8.0
      }
     },
     "1c42faa0b6184f349135dc122d4dd3ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "20d884c26bea4e0e8ef244b3499c3dfa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "25ed25b483df40c0a994f754d32a8c72": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2a1acca1d07e4bdfa8cb5c159d6d50bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_638f0c49dda6407fbd1a2e724f3227fb",
       "placeholder": "​",
       "style": "IPY_MODEL_b1f68526bd67462c8bd250e552122bc5",
       "value": "Loading checkpoint shards: 100%"
      }
     },
     "2daa6ba74122416bbafd735087bef2ba": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a8499d9ce08a453ab4a790e8d0464557",
        "IPY_MODEL_e49263ad941e41a18c3e6c4e31b895af",
        "IPY_MODEL_67c062fc2f85469597d6a37f6144bf07"
       ],
       "layout": "IPY_MODEL_0c6e4653cb23404b82a1b64789fa8d9a"
      }
     },
     "30e400133724456a8db0d8047764d61c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3a142b99f72a46b6a05e1fcf87a86776": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3c8193c879ec4e7097fa845cd440d76d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_7fdee6706d294ef2af2239655db4cbb9",
       "max": 4.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_30e400133724456a8db0d8047764d61c",
       "value": 4.0
      }
     },
     "3e25b4ac4a514ce4b7a9be506e368578": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_11c644b55667408da3398b447185fd3f",
       "placeholder": "​",
       "style": "IPY_MODEL_a5064ab1500c4f7388dbbe336b1997b2",
       "value": " 8/8 [00:00&lt;00:00, 10.48 examples/s]"
      }
     },
     "3e8375cc0e1a4aedbc659a15cb373e53": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_a069b2b2e1fb4e089f942002cd996fab",
       "placeholder": "​",
       "style": "IPY_MODEL_c9d2c7fa4e704cb89b804056693e966b",
       "value": "Map: 100%"
      }
     },
     "46ec1853256242b7a0e9744adbbc8a90": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "47a30d36760f478ab59ec086678cfac8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_130391c89297411d93f1e5f35cccd5c5",
        "IPY_MODEL_e64e7029585c48b4a904b6fdd1ccfa63",
        "IPY_MODEL_98ef24abf49b4067a53834a6877af939"
       ],
       "layout": "IPY_MODEL_feea71e431d14f9a86aab17e92347eb4"
      }
     },
     "49ae8da49c564edf882ee3372b684df2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "4c9cca70b8644037a2d2ff37d5f41a62": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "50ba0436b4b047b58f1eaec455cd4fe9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "52340bb446fd4c999090a1a2102427fa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_625b1dcabb5c43cdaee1bb9ff67f01b5",
       "placeholder": "​",
       "style": "IPY_MODEL_46ec1853256242b7a0e9744adbbc8a90",
       "value": " 29/29 [00:01&lt;00:00, 15.30 examples/s]"
      }
     },
     "5356f5aaf6554a469d67cd290b096b57": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2a1acca1d07e4bdfa8cb5c159d6d50bf",
        "IPY_MODEL_3c8193c879ec4e7097fa845cd440d76d",
        "IPY_MODEL_8a85920801ad43e88ca2bb099da1dab4"
       ],
       "layout": "IPY_MODEL_f51be7dda3684984a690f6c7032975d2"
      }
     },
     "53f33b5f34604c3b8510e48bcd1a55f3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3e8375cc0e1a4aedbc659a15cb373e53",
        "IPY_MODEL_7c607bb3adb2449f9c14141060409651",
        "IPY_MODEL_aec89e42f270421a8cf6ce30af93b90d"
       ],
       "layout": "IPY_MODEL_14035f72adfc4d1087fa81399bd64818"
      }
     },
     "564a0a4574ff484680c683ee204e6fe8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5dba4800bd6b408f9d34ce0c1b25a3d8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5ea05bf689134f5ba5330eaee5827f41": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "625b1dcabb5c43cdaee1bb9ff67f01b5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "638f0c49dda6407fbd1a2e724f3227fb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "64e6401230c04c118074974e0c5f3113": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "67c062fc2f85469597d6a37f6144bf07": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_ec233b7b2f064ad4bd3c6dbb97f807b6",
       "placeholder": "​",
       "style": "IPY_MODEL_1c42faa0b6184f349135dc122d4dd3ca",
       "value": " 37/37 [00:03&lt;00:00, 10.86 examples/s]"
      }
     },
     "74ef213ff13b48a68aa299d71a3d1458": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_07b05c79cde84424a22e74d61bbf09ed",
        "IPY_MODEL_efc91a873aef4c288cff06242359ad74",
        "IPY_MODEL_52340bb446fd4c999090a1a2102427fa"
       ],
       "layout": "IPY_MODEL_50ba0436b4b047b58f1eaec455cd4fe9"
      }
     },
     "78ba0412ce0c4f309a250b24f59c8cad": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7c607bb3adb2449f9c14141060409651": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e6736bbaaf5e49daab41130bbe6ddc46",
       "max": 29.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ef147220c7ef45cdbd5941c174abc1a1",
       "value": 29.0
      }
     },
     "7fdee6706d294ef2af2239655db4cbb9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "81e344e260084b46a330aea11eb50b30": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8a85920801ad43e88ca2bb099da1dab4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_3a142b99f72a46b6a05e1fcf87a86776",
       "placeholder": "​",
       "style": "IPY_MODEL_5ea05bf689134f5ba5330eaee5827f41",
       "value": " 4/4 [02:17&lt;00:00, 33.09s/it]"
      }
     },
     "8b3d0f8fb14146518b90e517d148aa3b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "94b4f880511e4135b28885c53276b84d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "98ef24abf49b4067a53834a6877af939": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_ac64b5dd16934810ae015297a53aba23",
       "placeholder": "​",
       "style": "IPY_MODEL_e9e2708bed8c4d18b99abf5d3187ba6c",
       "value": " 8/8 [00:00&lt;00:00, 290.52 examples/s]"
      }
     },
     "a069b2b2e1fb4e089f942002cd996fab": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a5064ab1500c4f7388dbbe336b1997b2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "a8499d9ce08a453ab4a790e8d0464557": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_20d884c26bea4e0e8ef244b3499c3dfa",
       "placeholder": "​",
       "style": "IPY_MODEL_dd028d6db1674bf9b5cf8ddfea9a832e",
       "value": "Map: 100%"
      }
     },
     "ac64b5dd16934810ae015297a53aba23": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "aec89e42f270421a8cf6ce30af93b90d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_8b3d0f8fb14146518b90e517d148aa3b",
       "placeholder": "​",
       "style": "IPY_MODEL_94b4f880511e4135b28885c53276b84d",
       "value": " 29/29 [00:00&lt;00:00, 386.02 examples/s]"
      }
     },
     "b1f68526bd67462c8bd250e552122bc5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "b6452f575ccf491d918c6143b475f460": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "ba342adb28064f949d63644b453e08d8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "bc9723566a5a4b04831c490a068485a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c9d2c7fa4e704cb89b804056693e966b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "d2c3a598e6cf486c843354e63c58a511": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_d874e88c4a744550830531a6684f771d",
       "placeholder": "​",
       "style": "IPY_MODEL_f024dce62fe542f4b81154448975e252",
       "value": "Map: 100%"
      }
     },
     "d5e0b61c358243fd9f5957de9c6211db": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d874e88c4a744550830531a6684f771d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dd028d6db1674bf9b5cf8ddfea9a832e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "e49263ad941e41a18c3e6c4e31b895af": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4c9cca70b8644037a2d2ff37d5f41a62",
       "max": 37.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5dba4800bd6b408f9d34ce0c1b25a3d8",
       "value": 37.0
      }
     },
     "e64e7029585c48b4a904b6fdd1ccfa63": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_d5e0b61c358243fd9f5957de9c6211db",
       "max": 8.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_64e6401230c04c118074974e0c5f3113",
       "value": 8.0
      }
     },
     "e6736bbaaf5e49daab41130bbe6ddc46": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e9e2708bed8c4d18b99abf5d3187ba6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "eb0b0f1573414307ad069504695452c2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ec14ef47751e4ab4afb4c10c556ada97": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d2c3a598e6cf486c843354e63c58a511",
        "IPY_MODEL_18133cf89cd748b7b1eb62448ac19d61",
        "IPY_MODEL_3e25b4ac4a514ce4b7a9be506e368578"
       ],
       "layout": "IPY_MODEL_bc9723566a5a4b04831c490a068485a2"
      }
     },
     "ec233b7b2f064ad4bd3c6dbb97f807b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ef147220c7ef45cdbd5941c174abc1a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "efc91a873aef4c288cff06242359ad74": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_eb0b0f1573414307ad069504695452c2",
       "max": 29.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_564a0a4574ff484680c683ee204e6fe8",
       "value": 29.0
      }
     },
     "f024dce62fe542f4b81154448975e252": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "f51be7dda3684984a690f6c7032975d2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "feea71e431d14f9a86aab17e92347eb4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
