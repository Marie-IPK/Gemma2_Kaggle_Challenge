{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e4157dfa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-18T21:32:15.344817Z",
     "iopub.status.busy": "2024-11-18T21:32:15.344412Z",
     "iopub.status.idle": "2024-11-18T21:32:26.945837Z",
     "shell.execute_reply": "2024-11-18T21:32:26.944429Z"
    },
    "papermill": {
     "duration": 11.608502,
     "end_time": "2024-11-18T21:32:26.948406",
     "exception": false,
     "start_time": "2024-11-18T21:32:15.339904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting pyPDF2\r\n",
      "  Downloading pypdf2-3.0.1-py3-none-any.whl.metadata (6.8 kB)\r\n",
      "Downloading pypdf2-3.0.1-py3-none-any.whl (232 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m232.6/232.6 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: pyPDF2\r\n",
      "Successfully installed pyPDF2-3.0.1\r\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pyPDF2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2ef40278",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-18T21:32:26.956360Z",
     "iopub.status.busy": "2024-11-18T21:32:26.955959Z",
     "iopub.status.idle": "2024-11-18T21:32:49.664742Z",
     "shell.execute_reply": "2024-11-18T21:32:49.663597Z"
    },
    "papermill": {
     "duration": 22.715695,
     "end_time": "2024-11-18T21:32:49.667357",
     "exception": false,
     "start_time": "2024-11-18T21:32:26.951662",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline, AutoModelForCausalLM\n",
    "from PyPDF2 import PdfReader\n",
    "from datasets import Dataset, DatasetDict\n",
    "from datasets import load_dataset\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6e73135",
   "metadata": {
    "papermill": {
     "duration": 0.002636,
     "end_time": "2024-11-18T21:32:49.673090",
     "exception": false,
     "start_time": "2024-11-18T21:32:49.670454",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 1. Load model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bd3d31fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-18T21:32:49.680515Z",
     "iopub.status.busy": "2024-11-18T21:32:49.679793Z",
     "iopub.status.idle": "2024-11-18T21:33:24.061406Z",
     "shell.execute_reply": "2024-11-18T21:33:24.060035Z"
    },
    "papermill": {
     "duration": 34.388036,
     "end_time": "2024-11-18T21:33:24.063897",
     "exception": false,
     "start_time": "2024-11-18T21:32:49.675861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "`config.hidden_act` is ignored, you should use `config.hidden_activation` instead.\n",
      "Gemma's activation function will be set to `gelu_pytorch_tanh`. Please, use\n",
      "`config.hidden_activation` if you want to override this behaviour.\n",
      "See https://github.com/huggingface/transformers/pull/29402 for more details.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c3bf8dba188b4f61a844b981f94f1b28",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load the Gemma model for other tasks\n",
    "gemma_model_path = \"/kaggle/input/gemma/transformers/2b-it/3\"  # Update with the exact folder name if different\n",
    "gemma_tokenizer = AutoTokenizer.from_pretrained(gemma_model_path)\n",
    "\n",
    "gemma_tokenizer.truncation = True\n",
    "\n",
    "gemma_model = AutoModelForCausalLM.from_pretrained(gemma_model_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c3a6990",
   "metadata": {
    "papermill": {
     "duration": 0.0028,
     "end_time": "2024-11-18T21:33:24.069916",
     "exception": false,
     "start_time": "2024-11-18T21:33:24.067116",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 2. Load Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d4a344fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-18T21:33:24.077570Z",
     "iopub.status.busy": "2024-11-18T21:33:24.077116Z",
     "iopub.status.idle": "2024-11-18T21:38:01.916696Z",
     "shell.execute_reply": "2024-11-18T21:38:01.915517Z"
    },
    "papermill": {
     "duration": 277.849295,
     "end_time": "2024-11-18T21:38:01.922148",
     "exception": false,
     "start_time": "2024-11-18T21:33:24.072853",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error processing Walugo et les poissons.pdf: xref table read error\n",
      "Dataset({\n",
      "    features: ['filename', 'content', 'page'],\n",
      "    num_rows: 123\n",
      "})\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'\\n    Ajouter les metadata : \\n\\n     \"region\": region,\\n     \"language\": language,  \\n     \"genre\": genre,\\n     \"theme\": theme,\\n     \"proverbs\": proverbs,\\n     \"characters\": characters,\\n     \"moral\": moral\\n'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Répertoire contenant les fichiers PDF\n",
    "pdf_dir = \"/kaggle/input/africa-book-try-llm/Data books\"\n",
    "\n",
    "data = []\n",
    "\n",
    "# Parcourir les fichiers PDF et extraire les informations\n",
    "for filename in os.listdir(pdf_dir):\n",
    "    if filename.endswith(\".pdf\"):\n",
    "        file_path = os.path.join(pdf_dir, filename)\n",
    "        try:\n",
    "            reader = PdfReader(file_path)  # Attempt to read the PDF\n",
    "            \n",
    "            # Extraire le contenu (texte) et le nombre de pages\n",
    "            content = \"\"\n",
    "            for page in reader.pages:\n",
    "                content += page.extract_text()\n",
    "            num_pages = len(reader.pages)\n",
    "            \n",
    "            # Ajouter les informations extraites dans la liste de données\n",
    "            data.append({\"filename\": filename, \"content\": content, \"page\": num_pages})\n",
    "        except Exception as e:\n",
    "            print(f\"Error processing {filename}: {e}\")\n",
    "            # Optionally log the error to a list for further inspection\n",
    "\n",
    "# Créer un dataset Hugging Face à partir des données extraites\n",
    "if data:  # Only create the dataset if there is valid data\n",
    "    dataset = Dataset.from_list(data)\n",
    "\n",
    "    # Vérifier la structure du dataset\n",
    "    print(dataset)\n",
    "else:\n",
    "    print(\"No valid data to create a dataset.\")\n",
    "\n",
    "    \n",
    "\"\"\"\n",
    "    Ajouter les metadata : \n",
    "\n",
    "     \"region\": region,\n",
    "     \"language\": language,  \n",
    "     \"genre\": genre,\n",
    "     \"theme\": theme,\n",
    "     \"proverbs\": proverbs,\n",
    "     \"characters\": characters,\n",
    "     \"moral\": moral\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "05dfbe74",
   "metadata": {
    "papermill": {
     "duration": 0.002868,
     "end_time": "2024-11-18T21:38:01.928133",
     "exception": false,
     "start_time": "2024-11-18T21:38:01.925265",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 3. Fine-tuning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74d4cdbc",
   "metadata": {
    "papermill": {
     "duration": 0.002819,
     "end_time": "2024-11-18T21:38:01.933959",
     "exception": false,
     "start_time": "2024-11-18T21:38:01.931140",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.1 <Methode>\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ecc113f2",
   "metadata": {
    "papermill": {
     "duration": 0.002787,
     "end_time": "2024-11-18T21:38:01.939803",
     "exception": false,
     "start_time": "2024-11-18T21:38:01.937016",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9690815,
     "sourceId": 85416,
     "sourceType": "competition"
    },
    {
     "datasetId": 5795281,
     "sourceId": 9518782,
     "sourceType": "datasetVersion"
    },
    {
     "isSourceIdPinned": true,
     "modelId": 3301,
     "modelInstanceId": 8318,
     "sourceId": 28785,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 352.131954,
   "end_time": "2024-11-18T21:38:04.764387",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-18T21:32:12.632433",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "222307ba838b4bd385c78ceab3e2ed3e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "98ebc273d4c54b55befd94203136dfa5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "9d1c9c10cbe74c28a31182e03dc631c0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c3bf8dba188b4f61a844b981f94f1b28": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f3b97380136e4864ba7f57ea86e4e85c",
        "IPY_MODEL_db19586a0b4f4e59b11c33a91938e17c",
        "IPY_MODEL_feba82bafa0a42f29896704a40a25f40"
       ],
       "layout": "IPY_MODEL_f7b65bbb5bce48caa34354750c960499"
      }
     },
     "ca14c4b8515542c4b0f97611db6aa918": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "db19586a0b4f4e59b11c33a91938e17c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9d1c9c10cbe74c28a31182e03dc631c0",
       "max": 2.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ca14c4b8515542c4b0f97611db6aa918",
       "value": 2.0
      }
     },
     "e31750b11ed744ba9a7254ead38908d3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e609759aec114daaba59719cc4a5b9e0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f3b97380136e4864ba7f57ea86e4e85c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e31750b11ed744ba9a7254ead38908d3",
       "placeholder": "​",
       "style": "IPY_MODEL_98ebc273d4c54b55befd94203136dfa5",
       "value": "Loading checkpoint shards: 100%"
      }
     },
     "f7b65bbb5bce48caa34354750c960499": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "feba82bafa0a42f29896704a40a25f40": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e609759aec114daaba59719cc4a5b9e0",
       "placeholder": "​",
       "style": "IPY_MODEL_222307ba838b4bd385c78ceab3e2ed3e",
       "value": " 2/2 [00:32&lt;00:00, 13.47s/it]"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
